{
    "contents" : "# INFORMACIÓN:\n#\n# El programa calcula medidas de variabilidad estructural y dinámica de mutantes múltiples de\n# una proteína determinada utilizando el modelo mutacional Linearly Forced - Elastic Network Model \n# (LF-ENM) y considerando a las fuerzas que modelan cada mutación aditivas entre sí. \n#\n# Para utilizar el programa se debe completar un input (\"DATA/Theoretical/inputT.csv\") especificando: \n# -family: la familia de proteínas a la que pertenece la proteína a mutar (en inglés y plural).\n# -p.ref: el código de pdb (pdbid) de la proteína a mutar.\n# -chain: la cadena de p.ref que se desea mutar.\n# -heme: solo se utiliza para la familia de las globinas, puede ser \"TRUE\" o \"FALSE\" dependiendo de \n# si se quiere considerar o no al grupo HEMO. \n# -nmut: la cantidad de mutantes a generar.\n# -nsitiosmut: la cantidad de sitios mutados por proteína mutante.\n# -Fmax: valor máximo de las fuerzas usadas para la simulación de las mutaciones.\n# -model: el modelo de red elástica, que solo puede ser \"ANM\" por el momento.\n# -R0: cut-off del ANM.\n\n#Remove objects#\nrm(list = ls()) \n\n#Read input#\ndata.dir <- \"DATA/Theoretical\"\n\ninput.dir <- file.path(data.dir,\"InputT.csv\")\ninput <- read.csv(input.dir)\n\n#Reference family and protein#\nfamily <- input$family\np.ref <- input$p.ref \nchain <- input$chain\nheme <- input$heme \n\n#Parameters for mutations#\nnmut = input$nmut \nnsitesmut = input$nsitesmut \nfmax = input$fmax \n\n#ENM#\nmodel <- input$model\nR0 = input$R0\n\n#Files dir#\nget.pdb(as.character(p.ref),data.dir) \npdb.fname <- file.path(data.dir,paste(p.ref,\".pdb\",sep=\"\"))\n\n#Functions dir#\nf.readCA <-\"FUNCTIONS/ReadCA.R\" \nf.readHeme <- \"FUNCTIONS/ReadHeme.R\"  \nf.Keff <- \"FUNCTIONS/Keff.R\"  \nf.K <- \"FUNCTIONS/K.R\" \nf.kij.function <- file.path(\"FUNCTIONS\",paste(\"Kij.\",model,\".R\",sep = \"\")) \nf.force <- \"FUNCTIONS/Force.R\"  \nf.variability <- \"FUNCTIONS/Variability.R\"  \n\n#Output dir#\nOUT <- \"OUT/Theoretical\"\n\n#General parameters#\nTOLERANCE = 1e-10\n\n#Load librarys#\nlibrary(bio3d)\n\n#Load Functions#\nsource(f.readCA) \nsource(f.readHeme) \nsource(f.Keff)\nsource(f.K)\nsource(f.kij.function)\nsource(f.force)\nsource(f.variability)\n\n#Read PDB of p.ref#\npdb <- readCA(pdb.fname,chain)\nr.wt = pdb$xyz.calpha\nnsites = pdb$nsites\nnaa = nsites \n\nif ((family == \"Globins\") & (heme == \"TRUE\")){\n  r.heme = readHeme(pdb.fname,chain)\n  r.wt = cbind(r.wt,r.heme)\n  nsites = ncol(r.wt)\n}\n\n#Calculate K of p.ref#\nK.wt <- K(r.wt,kij.function,R0,TOLERANCE)\n\n#Variability#\ndf.nH = matrix(ncol = 3*naa , nrow = nmut)\ndf.Pn = matrix(ncol = 3*naa , nrow = nmut)\ndf.d.evalues = matrix(ncol = 3*naa , nrow = nmut)\ndf.dr.squarei = matrix(ncol = naa , nrow = nmut)\n\n#Count the number of mutants to discard#\ncount = 0\n\n#Calculate mutants#\nfor(mut in seq(nmut)){\n \tf <- rep(0,3*nsites)\n\tfor (l in (sample(1:naa,replace = F)[1:nsitesmut])){\n    print(c(mut,l))\n    fl = force(l,r.wt,K.wt$kij,fmax)\n\t\tf = f + fl\n\t}\n\n  dr = K.wt$Cov %*% f\n  dim(dr) <- c(3,nsites)\n  r.mut = r.wt + dr\n\n  #Rotate mutants minimizing RMSD with P.ref#\n\tr.mut <- matrix(fit.xyz(fixed = as.vector(r.wt), \n\tmobile = as.vector(r.mut),\n\tfixed.inds = seq(1,3*naa),\n\tmobile.inds = seq(1,3*naa)),nrow=3) \n\t\n\t#Calculate K of mutants and p.ref#\n\tif (nsites != naa){ #Family = \"Globins\", heme = \"TRUE\"\n    K.mut <- keff(r.mut,seq(1,naa),seq((naa+1),nsites), kij.function,R0,TOLERANCE)\n\t  K.wt.2 <- keff(r.wt,seq(1,naa),seq((naa+1),nsites),kij.function,R0,TOLERANCE)\n\t}\n\tif (nsites == naa){\n\t  K.mut <- K(r.mut,kij.function,R0,TOLERANCE)\n\t  K.wt.2 <- K.wt\n\t}\n\tnmodes <- length(K.wt.2$va)  \n\t\n  #Calculate dr#\n  dr = (r.mut - r.wt)[,1:naa]   \n  \n\tif (ncol(K.mut$ve) == ncol(K.wt.2$ve)){ \n\t  \n\t  #Calculate measures o variability#\n\t\tVA <- variability(dr,K.wt.2,K.mut)\n    df.nH[mut,1:nmodes] = t(VA$nH)\n  \tdf.Pn[mut,1:nmodes] = t(VA$Pn)\n    df.d.evalues[mut,1:nmodes]  = t(VA$d.evalues[1:nmodes])\n\t\tdr.squarei = rbind(VA$dr.squarei,seq(1,naa))\n\t\tfor (i in (1:naa)){\n\t\t\tdf.dr.squarei[mut,i]= matrix(dr.squarei[1,dr.squarei[2,]==i],ncol=1,nrow=1)\n\t\t}\n\t}\n\tif (ncol(K.mut$ve) != ncol(K.wt.2$ve)){ \n\t  count <- count +1\n\t}\n}\n\n#Calculate Means#\nmean.nH = colMeans(as.matrix(df.nH),na.rm=T)\nmean.Pn = colMeans(as.matrix(df.Pn),na.rm=T)\nmean.d.evalues= colMeans(as.matrix(df.d.evalues),na.rm=T)\nMSDi = colMeans(as.matrix(df.dr.squarei),na.rm=T)\nMSD = rowMeans(df.dr.squarei,na.rm = T)\n\n#SAVE INFORMATION#\nif (family == \"Globins\") p.ref <- paste(p.ref,\"Heme\",heme,sep =\"\")\n\n#Dataframes#\nwrite.csv(df.nH,file = file.path(OUT , paste(p.ref , \".Out.df.nH.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(df.Pn,file = file.path(OUT , paste(p.ref , \".Out.df.Pn.csv\" , sep=\"\")) , row.names = FALSE)\nwrite.csv(df.d.evalues,file = file.path(OUT , paste(p.ref , \".Out.df.d.evalues.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(df.dr.squarei,file = file.path(OUT , paste(p.ref , \".Out.df.dr.squarei.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(K.wt.2$va,file = file.path(OUT , paste(p.ref , \".Out.evalues.csv\" , sep = \"\")) , row.names = FALSE)\n\n#Means#\nwrite.csv(mean.nH,file = file.path(OUT , paste(p.ref , \".Out.nH.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(mean.Pn,file = file.path(OUT , paste(p.ref , \".Out.Pn.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(mean.d.evalues,file = file.path(OUT , paste(p.ref , \".Out.d.evalues.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(MSDi,file = file.path(OUT , paste(p.ref , \".Out.dr.squarei.mean.csv\" , sep = \"\")) , row.names = FALSE)\nwrite.csv(MSD,file = file.path(OUT , paste(p.ref , \".Out.dr.square.mean.csv\", sep = \"\")) , row.names = FALSE)\n\n#input#\nwrite.csv(input,file = file.path(OUT , paste(p.ref , \".Input\" , sep = \"\")) , row.names = FALSE)\n\n\n",
    "created" : 1443461648167.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4083655467",
    "id" : "9EC5C459",
    "lastKnownWriteTime" : 1443553366,
    "path" : "C:/Users/Laurita/Desktop/Doctorado/Variabilidad Estructural/TheoreticalMain.R",
    "project_path" : "TheoreticalMain.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}